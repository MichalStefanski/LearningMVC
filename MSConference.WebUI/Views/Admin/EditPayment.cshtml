@model MSConference.WebUI.ViewModels.TableViewModel

@{
    ViewBag.Title = "Edytuj Płatność";
}

<h2>Edytuj Płatność - @Model.GetGuest.GuestFirstName @Model.GetGuest.GuestLastName</h2>

@using (Html.BeginForm("EditPayment", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @Html.HiddenFor(model => model.GetPayment.PaymentID)
        @Html.HiddenFor(model => model.GetPayment.GuestID)

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.BillValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.BillValue, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.PaidValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.PaidValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetPayment.PaidValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.DateOfPayment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.DateOfPayment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetPayment.DateOfPayment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.DateToBill, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.DateToBill, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.BankInfo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.BankInfo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetPayment.BankInfo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.AccountInfo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.AccountInfo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetPayment.AccountInfo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.IsPaidFull, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.IsPaidFull, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.AmmountLeft, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.AmmountLeft, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GetPayment.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetPayment.Notes, new { htmlAttributes = new { @class = "form-control", rows = "5" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

    <div>
        @Html.ActionLink("Powrót do Listy", "Bills", null, new { @class = "btn btn-success" })
    </div>
